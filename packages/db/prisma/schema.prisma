// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  CREW
}

model Qrcode {
  code         String   @id @default(uuid())
  name         String
  description  String
  costPrice    Float
  sellingPrice Float
  createdAt    DateTime @default(now())

  // Relation: One Qrcode can have many entries
  entries Entry[]
}

model Account {
  userId    String   @id @default(uuid())
  name      String
  role      Role     @default(CREW)
  email     String   @unique
  mobileNo  Int?     @unique
  imagePath String?
  createdAt DateTime @default(now())

  // Relation: One user can make multiple entries
  entries Entry[]
}

model Entry {
  eid          String   @id @default(uuid())
  date         DateTime @default(now())
  noOfItemsIn  Int      @default(0)
  noOfItemsOut Int      @default(0)

  // Foreign keys
  qrcodeId String
  userId   String

  // Relations
  qrcode Qrcode  @relation(fields: [qrcodeId], references: [code], onDelete: Cascade)
  user   Account @relation(fields: [userId], references: [userId], onDelete: Cascade)

  // Unique Constraint for one QR code per day
  @@unique([qrcodeId, date])
}

enum Category {
  IMPORTANT
  SUCCESS
  GENERAL
}

model Notifications {
  id       DateTime @id @default(now())
  category Category
  title    String
  message  String
  for      Role
}
